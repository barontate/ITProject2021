{"version":3,"sources":["Login.js","Loginpage.js","reportWebVitals.js","index.jsx"],"names":["Login","useState","loginStatus","setLoginStatus","Container","LogoWrap","Logo","LoginForm","LSwindow","type","id","name","placeholder","Button","value","SignUpForm","Footer","LSprompt","onClick","styled","div","p","props","img","attrs","src","form","action","method","Loginpage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6QAgDeA,MA5Cf,WAEE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,eAACC,EAAD,WAEE,cAACC,EAAD,UACE,cAACC,EAAD,MAEF,cAACC,EAAD,UACE,eAACC,EAAD,CAAUN,aAAeA,EAAzB,UACI,uBAAOO,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,UACvD,uBAAOH,KAAK,WAAWC,GAAG,WAAWC,KAAK,WAAWC,YAAY,aACjE,cAACC,EAAD,UACA,uBAAOJ,KAAK,SAASK,MAAM,iBAIjC,cAACC,EAAD,UACE,eAACP,EAAD,CAAUN,YAAcA,EAAxB,UACI,uBAAOO,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAAWC,YAAY,aAC7D,uBAAOH,KAAK,OAAOC,GAAG,YAAYC,KAAK,YAAYC,YAAY,eAC/D,uBAAOH,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAAWC,YAAY,cAC7D,uBAAOH,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,UACvD,uBAAOH,KAAK,WAAWC,GAAG,WAAWC,KAAK,WAAWC,YAAY,aACjE,cAACC,EAAD,UACA,uBAAOJ,KAAK,SAASK,MAAM,kBAIjC,eAACE,EAAD,WACE,cAACC,EAAD,CAAUf,aAAeA,EAAcgB,QAAS,kBAAIf,GAAe,IAAnE,SACI,sEAEJ,cAACc,EAAD,CAAUf,YAAcA,EAAcgB,QAAS,kBAAIf,GAAe,IAAlE,SACI,8DAEJ,oEAQFC,EAAYe,IAAOC,IAAV,8KAQTJ,EAASG,IAAOC,IAAV,0QAeNH,EAAWE,IAAOE,EAAV,sIAEC,SAAAC,GAAK,OAAIA,EAAMpB,YAAc,OAAS,UAO/CI,EAAOa,IAAOI,IAAIC,MAAM,CAC5BC,IAAK,oBADMN,CAAH,iEAOJd,EAAWc,IAAOC,IAAV,sQAcRb,EAAYY,IAAOO,KAAKF,MAAM,CAClCG,OAAQ,aACRC,OAAQ,QAFQT,CAAH,qiBA6BTJ,EAAaI,IAAOO,KAAKF,MAAM,CACnCG,OAAQ,cACRC,OAAQ,QAFST,CAAH,qiBA6BVN,EAASM,IAAOC,IAAV,+bAuBNZ,EAAWW,IAAOC,IAAV,0FACC,SAAAE,GAAK,OAAIA,EAAMpB,YAAc,OAAS,UCpLhC2B,E,4JAEnB,WACE,OACE,cAAC,EAAD,Q,GAJiCC,a,QCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75e9902d.chunk.js","sourcesContent":["import './App.css';\r\nimport styled from 'styled-components'\r\nimport { useState } from 'react'\r\n\r\nfunction Login() {\r\n\r\n  const [loginStatus, setLoginStatus] = useState(true);\r\n    \r\n  return (\r\n    <Container>\r\n      \r\n      <LogoWrap>\r\n        <Logo/>\r\n      </ LogoWrap>\r\n      <LoginForm>\r\n        <LSwindow loginStatus={ !loginStatus }>\r\n            <input type='text' id='email' name='email' placeholder=\"Email\" />\r\n            <input type='password' id='password' name='password' placeholder=\"Password\" />\r\n            <Button>\r\n            <input type=\"submit\" value=\"Login\"></input>\r\n            </ Button>\r\n        </LSwindow>\r\n      </LoginForm>\r\n      <SignUpForm>\r\n        <LSwindow loginStatus={ loginStatus }>\r\n            <input type='text' id='userName' name='userName' placeholder=\"Username\" />\r\n            <input type='text' id='firstName' name='firstName' placeholder=\"First Name\" />\r\n            <input type='text' id='lastName' name='lastName' placeholder=\"Last Name\" />\r\n            <input type='text' id='email' name='email' placeholder=\"Email\" />\r\n            <input type='password' id='password' name='password' placeholder=\"Password\" />\r\n            <Button>\r\n            <input type=\"submit\" value=\"Signup\"></input>\r\n            </ Button>\r\n        </LSwindow>\r\n      </SignUpForm>\r\n      <Footer>\r\n        <LSprompt loginStatus={ !loginStatus } onClick={()=>setLoginStatus(false)}>\r\n            <p>Don't have an account? Sign up here</p>\r\n        </LSprompt>\r\n        <LSprompt loginStatus={ loginStatus } onClick={()=>setLoginStatus(true)}>\r\n            <p>Have an account? Login here</p>\r\n        </LSprompt>\r\n        <p>Contact us: branch@gmail.com</p>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-image: url(\"/images/background.png\");\r\n  background-position: center;\r\n  background-size: cover;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  color: grey;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  height: 55px;\r\n  background-color: black;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst LSprompt = styled.p`\r\n    margin: 0 10px;\r\n    display: ${props => props.loginStatus ? 'none' : 'flex'};\r\n    cursor: pointer;\r\n    p:hover{\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Logo = styled.img.attrs({\r\n  src: '/images/logo.png'\r\n})`\r\n  width: 50%;\r\n  margin-right: 6px;\r\n`\r\n\r\nconst LogoWrap = styled.div`\r\n    height: 80px;\r\n    display: flex;\r\n    position: fixed;\r\n    align-items: center;\r\n    top: 15%;\r\n    left: 50%; \r\n    transform: translate(-30%, 0);\r\n    font-size: 30px;\r\n    h1 {\r\n        transform: translate(0, -5px);\r\n    }\r\n`\r\n\r\nconst LoginForm = styled.form.attrs({\r\n  action: \"/api/login\",\r\n  method: \"post\"\r\n})`\r\n  gap: 10px;\r\n  position: fixed;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 35%;\r\n  left: 50%; \r\n  transform: translate(-50%, 0%);\r\n\r\n  input[type=text], input[type=password] {\r\n    padding: 5px 5px;\r\n    background-color: transparent;\r\n    margin: 8px 0;\r\n    border-bottom: 1px solid black;\r\n    border-right: none;\r\n    border-top: none;\r\n    border-left: none;\r\n    box-sizing: border-box;\r\n    color: black;\r\n  }\r\n\r\n  input[type=text]:focus, input[type=password]:focus  {\r\n    outline: none;\r\n  } \r\n`\r\n\r\nconst SignUpForm = styled.form.attrs({\r\n  action: \"/api/signup\",\r\n  method: \"post\"\r\n})`\r\n  gap: 10px;\r\n  position: fixed;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 35%;\r\n  left: 50%; \r\n  transform: translate(-50%, 0%);\r\n\r\n  input[type=text], input[type=password] {\r\n    padding: 5px 5px;\r\n    background-color: transparent;\r\n    margin: 8px 0;\r\n    border-bottom: 1px solid black;\r\n    border-right: none;\r\n    border-top: none;\r\n    border-left: none;\r\n    box-sizing: border-box;\r\n    color: black;\r\n  }\r\n\r\n  input[type=text]:focus, input[type=password]:focus  {\r\n    outline: none;\r\n  } \r\n`\r\n\r\nconst Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  \r\n\r\n  input[type=submit] {\r\n    width: 60px;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    background-color: rgb(150, 180, 180);\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: none;\r\n    box-shadow: 2px 2px 5px grey;\r\n  }\r\n\r\n  input[type=submit]:hover {\r\n    background-color: rgb(50, 230, 230);\r\n    cursor: pointer;\r\n    box-shadow: 4px 4px 5px grey;\r\n  }\r\n`\r\n\r\nconst LSwindow = styled.div`\r\n    display: ${props => props.loginStatus ? 'none' : 'grid'};\r\n    grid-template-columns: 1;\r\n    \r\n    \r\n`","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Login from './Login';\r\n\r\n\r\nexport default class Loginpage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Login />\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Loginpage from './Loginpage';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Loginpage />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}