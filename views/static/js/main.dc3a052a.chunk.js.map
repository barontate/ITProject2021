{"version":3,"sources":["Login.js","Loginpage.js","reportWebVitals.js","index.jsx"],"names":["Login","useState","loginStatus","setLoginStatus","Container","LogoWrap","Logo","Inputs","LSwindow","type","id","name","placeholder","Button","value","Footer","LSprompt","onClick","styled","div","p","props","img","attrs","src","form","action","method","Loginpage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2QAmDeA,MA3Cf,WAEE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,eAACC,EAAD,WAEE,cAACC,EAAD,UACE,cAACC,EAAD,MAEF,eAACC,EAAD,WACE,eAACC,EAAD,CAAUN,aAAeA,EAAzB,UACI,uBAAOO,KAAK,OAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,UACvD,uBAAOH,KAAK,WAAWC,GAAG,WAAWC,KAAK,WAAWC,YAAY,aACjE,cAACC,EAAD,UACA,uBAAOJ,KAAK,SAASK,MAAM,eAG/B,eAACN,EAAD,CAAUN,YAAcA,EAAxB,UACI,uBAAOO,KAAK,OAAOC,GAAG,WAAWE,YAAY,aAC7C,uBAAOH,KAAK,OAAOC,GAAG,YAAYE,YAAY,eAC9C,uBAAOH,KAAK,OAAOC,GAAG,WAAWE,YAAY,cAC7C,uBAAOH,KAAK,OAAOC,GAAG,QAAQE,YAAY,UAC1C,uBAAOH,KAAK,WAAWC,GAAG,WAAWE,YAAY,aACjD,cAACC,EAAD,UACA,uBAAOJ,KAAK,SAASK,MAAM,mBAKjC,eAACC,EAAD,WACE,cAACC,EAAD,CAAUd,aAAeA,EAAce,QAAS,kBAAId,GAAe,IAAnE,SACI,sEAEJ,cAACa,EAAD,CAAUd,YAAcA,EAAce,QAAS,kBAAId,GAAe,IAAlE,SACI,8DAEJ,oEAQFC,EAAYc,IAAOC,IAAV,8KAQTJ,EAASG,IAAOC,IAAV,0QAeNH,EAAWE,IAAOE,EAAV,sIAEC,SAAAC,GAAK,OAAIA,EAAMnB,YAAc,OAAS,UAO/CI,EAAOY,IAAOI,IAAIC,MAAM,CAC5BC,IAAK,oBADMN,CAAH,iEAOJb,EAAWa,IAAOC,IAAV,sQAcRZ,EAASW,IAAOO,KAAKF,MAAM,CAC/BG,OAAQ,aACRC,OAAQ,QAFKT,CAAH,0iBA+BNL,EAASK,IAAOC,IAAV,+bAuBNX,EAAWU,IAAOC,IAAV,0FACC,SAAAE,GAAK,OAAIA,EAAMnB,YAAc,OAAS,UC7JhC0B,E,4JAEnB,WACE,OACE,cAAC,EAAD,Q,GAJiCC,a,QCQxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc3a052a.chunk.js","sourcesContent":["import './App.css';\nimport styled from 'styled-components'\nimport { useState } from 'react'\n\nfunction loginSubmit(){\n\n}\n\nfunction Login() {\n\n  const [loginStatus, setLoginStatus] = useState(true);\n    \n  return (\n    <Container>\n      \n      <LogoWrap>\n        <Logo/>\n      </ LogoWrap>\n      <Inputs>\n        <LSwindow loginStatus={ !loginStatus }>\n            <input type='text' id='email' name='email' placeholder=\"Email\" />\n            <input type='password' id='password' name='password' placeholder=\"Password\" />\n            <Button>\n            <input type=\"submit\" value=\"Login\"></input>\n            </ Button>\n        </LSwindow>\n        <LSwindow loginStatus={ loginStatus }>\n            <input type='text' id='userName' placeholder=\"Username\" />\n            <input type='text' id='firstName' placeholder=\"First Name\" />\n            <input type='text' id='lastName' placeholder=\"Last Name\" />\n            <input type='text' id='email' placeholder=\"Email\" />\n            <input type='password' id='password' placeholder=\"Password\" />\n            <Button>\n            <input type=\"submit\" value=\"Signup\"></input>\n            </ Button>\n        </LSwindow>\n        \n      </Inputs>\n      <Footer>\n        <LSprompt loginStatus={ !loginStatus } onClick={()=>setLoginStatus(false)}>\n            <p>Don't have an account? Sign up here</p>\n        </LSprompt>\n        <LSprompt loginStatus={ loginStatus } onClick={()=>setLoginStatus(true)}>\n            <p>Have an account? Login here</p>\n        </LSprompt>\n        <p>Contact us: branch@gmail.com</p>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default Login;\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-image: url(\"/images/background.png\");\n  background-position: center;\n  background-size: cover;\n`\n\nconst Footer = styled.div`\n  position: fixed;\n  display: flex;\n  color: grey;\n  font-weight: 700;\n  font-size: 20px;\n  height: 55px;\n  background-color: black;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst LSprompt = styled.p`\n    margin: 0 10px;\n    display: ${props => props.loginStatus ? 'none' : 'flex'};\n    cursor: pointer;\n    p:hover{\n        color: white;\n    }\n`\n\nconst Logo = styled.img.attrs({\n  src: '/images/logo.png'\n})`\n  width: 50%;\n  margin-right: 6px;\n`\n\nconst LogoWrap = styled.div`\n    height: 80px;\n    display: flex;\n    position: fixed;\n    align-items: center;\n    top: 15%;\n    left: 50%; \n    transform: translate(-30%, 0);\n    font-size: 30px;\n    h1 {\n        transform: translate(0, -5px);\n    }\n`\n\nconst Inputs = styled.form.attrs({\n  action: \"/api/login\", //\"/api/signup\"\n  method: \"post\"\n})`\n  gap: 10px;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  top: 35%;\n  left: 50%; \n  transform: translate(-50%, 0%);\n\n  input[type=text], input[type=password] {\n    padding: 5px 5px;\n    background-color: transparent;\n    margin: 8px 0;\n    border-bottom: 1px solid black;\n    border-right: none;\n    border-top: none;\n    border-left: none;\n    box-sizing: border-box;\n    color: black;\n  }\n\n  input[type=text]:focus, input[type=password]:focus  {\n    outline: none;\n  }\n\n  \n`\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  \n\n  input[type=submit] {\n    width: 60px;\n    padding: 5px;\n    border-radius: 10px;\n    background-color: rgb(150, 180, 180);\n    cursor: pointer;\n    outline: none;\n    border: none;\n    box-shadow: 2px 2px 5px grey;\n  }\n\n  input[type=submit]:hover {\n    background-color: rgb(50, 230, 230);\n    cursor: pointer;\n    box-shadow: 4px 4px 5px grey;\n  }\n`\n\nconst LSwindow = styled.div`\n    display: ${props => props.loginStatus ? 'none' : 'grid'};\n    grid-template-columns: 1;\n    \n    \n`","import './App.css';\nimport React, { Component } from 'react';\nimport Login from './Login';\n\nexport default class Loginpage extends Component {\n\n  render() {\n    return (\n      <Login />\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Loginpage from './Loginpage';\nimport {BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Loginpage />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}