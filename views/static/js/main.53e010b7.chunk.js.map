{"version":3,"sources":["Loginpage.js","reportWebVitals.js","index.jsx"],"names":["Loginpage","Container","Logo","Tree","Inputs","action","type","id","placeholder","Button","value","Footer","Component","styled","div","img","attrs","src","form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAKqBA,E,4JAEnB,WACE,OACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,IACA,2CAEF,eAACC,EAAD,CAAQC,OAAO,QAAf,UACE,uBAAOC,KAAK,OAAOC,GAAG,WAAWC,YAAY,aAC7C,uBAAOF,KAAK,WAAWC,GAAG,WAAWC,YAAY,aACjD,cAACC,EAAD,UACE,uBAAOH,KAAK,SAASI,MAAM,eAG/B,eAACC,EAAD,WACE,oEACA,uE,GAlB6BC,aAyBjCX,EAAYY,IAAOC,IAAV,8KAQTH,EAASE,IAAOC,IAAV,4SAkBNX,EAAOU,IAAOE,IAAIC,MAAM,CAC5BC,IAAK,oBADMJ,CAAH,mHASJX,EAAOW,IAAOC,IAAV,8OAcJV,EAASS,IAAOK,KAAKF,MAAM,GAAlBH,CAAH,ylBAgCNJ,EAASI,IAAOC,IAAV,mZ,QCnGGK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.53e010b7.chunk.js","sourcesContent":["import './App.css';\r\nimport styled from 'styled-components';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Loginpage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container>        \r\n        <Logo>\r\n          <Tree/>\r\n          <h1>Branch</h1>\r\n        </ Logo>\r\n        <Inputs action=\"/home\">\r\n          <input type='text' id='username' placeholder=\"Username\" />\r\n          <input type='password' id='password' placeholder=\"Password\" />\r\n          <Button>\r\n            <input type=\"submit\" value=\"Login\"></input>\r\n          </ Button>\r\n        </Inputs>\r\n        <Footer>\r\n          <p>Don't have an account? Sign up here</p>\r\n          <p>Contact us: branch@gmail.com</p>\r\n        </Footer>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-image: url(\"/images/background.png\");\r\n  background-position: center;\r\n  background-size: cover;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  height: 60px;\r\n  background-color: black;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  p {\r\n    margin: 0 10px;\r\n  }\r\n`\r\n\r\nconst Tree = styled.img.attrs({\r\n  src: '/images/tree.png'\r\n})`\r\n  width: 120px;\r\n  height: 120px;\r\n  transform: rotate(-90deg);\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Logo = styled.div`\r\n  height: 80px;\r\n  display: flex;\r\n  position: fixed;\r\n  align-items: center;\r\n  top: 15%;\r\n  left: 50%; \r\n  transform: translate(-68%, 0);\r\n  font-size: 30px;\r\n  h1 {\r\n    transform: translate(0, -5px);\r\n  }\r\n`\r\n\r\nconst Inputs = styled.form.attrs({\r\n  \r\n})`\r\n  display: grid;\r\n  grid-template-columns: 1;\r\n  gap: 10px;\r\n  position: fixed;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 35%;\r\n  left: 50%; \r\n  transform: translate(-50%, 0%);\r\n\r\n  input[type=text], input[type=password] {\r\n    padding: 5px 5px;\r\n    background-color: transparent;\r\n    margin: 8px 0;\r\n    border-bottom: 1px solid black;\r\n    border-right: none;\r\n    border-top: none;\r\n    border-left: none;\r\n    box-sizing: border-box;\r\n    color: black;\r\n  }\r\n\r\n  input[type=text]:focus, input[type=password]:focus  {\r\n    outline: none;\r\n  }\r\n\r\n  \r\n`\r\n\r\nconst Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  \r\n\r\n  input[type=submit] {\r\n    width: 60px;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    background-color: rgb(150, 180, 180);\r\n    outline: none;\r\n    border: none;\r\n    box-shadow: 2px 2px 5px grey;\r\n  }\r\n\r\n  input[type=submit]:hover {\r\n    background-color: rgb(50, 230, 230);\r\n    box-shadow: 4px 4px 5px grey;\r\n  }\r\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Loginpage from './Loginpage';\nimport {BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Loginpage />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}